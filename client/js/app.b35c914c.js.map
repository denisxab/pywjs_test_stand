{"version":3,"file":"js/app.b35c914c.js","mappings":"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","sources":["webpack://pywjs_test_stand/./src/App.vue?346f","webpack://pywjs_test_stand/./src/components/testUseServer.vue?fab4","webpack://pywjs_test_stand/./src/components/UI/vselect.vue?e21e","webpack://pywjs_test_stand/./src/components/UI/vselect.vue?f283","webpack://pywjs_test_stand/./src/components/UI/vselect.vue","webpack://pywjs_test_stand/./src/components/UI/vtextarea.vue?cb12","webpack://pywjs_test_stand/./src/components/UI/vtextarea.vue?1e82","webpack://pywjs_test_stand/./src/components/UI/vtextarea.vue","webpack://pywjs_test_stand/../../pyw_js/vue/pyjs_log/prettyJson/prettyJson.vue?6bba","webpack://pywjs_test_stand/../../pyw_js/vue/pyjs_log/prettyJson/prettyJson.js","webpack://pywjs_test_stand/../../pyw_js/vue/pyjs_log/prettyJson/prettyJson.vue?c9f1","webpack://pywjs_test_stand/../../pyw_js/vue/pyjs_log/prettyJson/prettyJson.vue","webpack://pywjs_test_stand/./src/components/UI/vbutton.vue?bfbc","webpack://pywjs_test_stand/./src/components/UI/vbutton.vue?7612","webpack://pywjs_test_stand/./src/components/UI/vbutton.vue","webpack://pywjs_test_stand/./src/components/testUseServer.vue?113a","webpack://pywjs_test_stand/./src/components/testUseServer.vue","webpack://pywjs_test_stand/../../pyw_js/vue/pyjs_log/pyjs_log.vue?6855","webpack://pywjs_test_stand/../../pyw_js/wbs_type.ts","webpack://pywjs_test_stand/../../pyw_js/wbs.ts","webpack://pywjs_test_stand/../../pyw_js/vue/pyjs_log/pyjs_log.vue?fdcb","webpack://pywjs_test_stand/../../pyw_js/vue/pyjs_log/pyjs_log.vue","webpack://pywjs_test_stand/./src/App.vue?847a","webpack://pywjs_test_stand/./src/App.vue","webpack://pywjs_test_stand/../../pyw_js/vue/wbsStore.ts","webpack://pywjs_test_stand/./src/store/index.ts","webpack://pywjs_test_stand/./src/main.ts","webpack://pywjs_test_stand/webpack/bootstrap","webpack://pywjs_test_stand/webpack/runtime/chunk loaded","webpack://pywjs_test_stand/webpack/runtime/compat get default export","webpack://pywjs_test_stand/webpack/runtime/define property getters","webpack://pywjs_test_stand/webpack/runtime/global","webpack://pywjs_test_stand/webpack/runtime/hasOwnProperty shorthand","webpack://pywjs_test_stand/webpack/runtime/jsonp chunk loading","webpack://pywjs_test_stand/webpack/startup"],"sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"app\" }\nconst _hoisted_2 = { class: \"test_box\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_PyjsLog = _resolveComponent(\"PyjsLog\")!\n  const _component_testUseServer = _resolveComponent(\"testUseServer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_PyjsLog),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createVNode(_component_testUseServer, {\n          get_h_id: $data.test_send.get_h_id,\n          label: `Тестовый стенд PywJs`,\n          template: $data.test_send.template,\n          type_send: $data.test_send.type_send,\n          token: $data.token,\n          host: $data.host,\n          port: $data.port,\n          onSend: $options.send,\n          onSend_force: $options.send_force,\n          onSend_dependent: $options.send_dependent,\n          onSend_transaction: $options.send_transaction,\n          onSend_before: $options.send_before\n        }, null, 8, [\"get_h_id\", \"template\", \"type_send\", \"token\", \"host\", \"port\", \"onSend\", \"onSend_force\", \"onSend_dependent\", \"onSend_transaction\", \"onSend_before\"])\n      ])\n    ])\n  ], 64))\n}","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2bc94a64\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"label\" }\nconst _hoisted_2 = { class: \"use_server\" }\nconst _hoisted_3 = { class: \"request\" }\nconst _hoisted_4 = { class: \"vselect\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"help\" }, \"ctrl+enter Отправить сообщение\", -1))\nconst _hoisted_6 = { class: \"response\" }\nconst _hoisted_7 = { class: \"infohid\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_vtextarea = _resolveComponent(\"vtextarea\")!\n  const _component_vselect = _resolveComponent(\"vselect\")!\n  const _component_vbutton = _resolveComponent(\"vbutton\")!\n  const _component_PrettyJson = _resolveComponent(\"PrettyJson\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"h2\", _hoisted_1, _toDisplayString($props.label), 1),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(_component_vtextarea, {\n          background: `#3b4252`,\n          color: `#eceff4`,\n          modelValue: $data.request,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (($data.request) = $event))\n        }, null, 8, [\"modelValue\"]),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createVNode(_component_vselect, {\n            color: `#d8dee9`,\n            modelValue: $data.selectTemplate,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (($data.selectTemplate) = $event)),\n            options: $props.template,\n            type_select: `dict`,\n            label: `Шаблоны`,\n            onChange: $options.SelectChangeTemplate\n          }, null, 8, [\"modelValue\", \"options\", \"onChange\"]),\n          _createVNode(_component_vselect, {\n            color: `#d8dee9`,\n            type_select: `list`,\n            modelValue: $data.selectSend,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (($data.selectSend) = $event)),\n            options: $props.type_send,\n            label: `Варианты отправки сообщения`\n          }, null, 8, [\"modelValue\", \"options\"])\n        ]),\n        _createVNode(_component_vbutton, {\n          class: \"vbutton\",\n          onClick: $options.ClickSend\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\"Отправить\")\n          ]),\n          _: 1\n        }, 8, [\"onClick\"]),\n        _hoisted_5\n      ]),\n      _createElementVNode(\"div\", _hoisted_6, [\n        _createVNode(_component_PrettyJson, { JsonPretty: $options.Response }, null, 8, [\"JsonPretty\"]),\n        _createElementVNode(\"div\", _hoisted_7, \"Ожидает h_id: \" + _toDisplayString($props.get_h_id), 1)\n      ])\n    ])\n  ], 64))\n}","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-48e37caa\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"vselect_box\" }\nconst _hoisted_2 = [\"v-model\"]\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Выбор из списка\", -1))\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = [\"value\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"label\", null, _toDisplayString($props.label), 1),\n    _createElementVNode(\"select\", {\n      \"v-model\": $props.modelValue,\n      onChange: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => ($options.changeOption && $options.changeOption(...args)))\n    }, [\n      _hoisted_3,\n      ($props.type_select == 'dict')\n        ? (_openBlock(true), _createElementBlock(_Fragment, { key: 0 }, _renderList($props.options, (value, name, index) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: name,\n              value: name\n            }, _toDisplayString(name), 9, _hoisted_4))\n          }), 128))\n        : ($props.type_select == 'list')\n          ? (_openBlock(true), _createElementBlock(_Fragment, { key: 1 }, _renderList($props.options, (value) => {\n              return (_openBlock(), _createElementBlock(\"option\", {\n                key: value,\n                value: value\n              }, _toDisplayString(value), 9, _hoisted_5))\n            }), 128))\n          : _createCommentVNode(\"\", true)\n    ], 40, _hoisted_2)\n  ]))\n}","\nconst __default__ = {\n    props: {\n        // Заголовок селектора\n        label: { type: String, default: () => \"Название\" },\n        // Какой тип опций, словарь или список\n        type_select: String as () => \"dict\" | \"list\",\n        // Опции\n        options: {\n            type: Object as () => object | any[],\n        },\n        modelValue: {\n            type: String,\n        },\n        // CSS стили\n        background: {\n            type: String,\n            default: () => \"#000\",\n        },\n        color: {\n            type: String,\n            default: () => \"#000\",\n        },\n    },\n    // Методы\n    methods: {\n        changeOption(event: any) {\n            this.$emit(\"update:modelValue\", event.target.value);\n        },\n    },\n    mounted() {\n        if (this.type_select == \"dict\") {\n            // Выбираем первую опцию\n            const first_select = Object.keys(this.options)[0];\n            // Обновляем переменную\n            this.$emit(\"update:modelValue\", first_select);\n            // Вызываем событие изменения селектора\n            this.$emit(\"change\");\n        } else if (this.type_select == \"list\") {\n            // Выбираем первую опцию\n            const first_select = this.options[0];\n            // Обновляем переменную\n            this.$emit(\"update:modelValue\", first_select);\n            // Вызываем событие изменения селектора\n            this.$emit(\"change\");\n        }\n    },\n};\n\nimport { useCssVars as _useCssVars } from 'vue'\nconst __injectCSSVars__ = () => {\n_useCssVars(_ctx => ({\n  \"bd8ae662\": (_ctx.color),\n  \"783b097c\": (_ctx.background)\n}))}\nconst __setup__ = __default__.setup\n__default__.setup = __setup__\n  ? (props, ctx) => { __injectCSSVars__();return __setup__(props, ctx) }\n  : __injectCSSVars__\n\nexport default __default__","import { render } from \"./vselect.vue?vue&type=template&id=48e37caa&scoped=true&ts=true\"\nimport script from \"./vselect.vue?vue&type=script&lang=ts\"\nexport * from \"./vselect.vue?vue&type=script&lang=ts\"\n\nimport \"./vselect.vue?vue&type=style&index=0&id=48e37caa&lang=scss&scoped=true\"\n\nimport exportComponent from \"/media/denis/dd19b13d-bd85-46bb-8db9-5b8f6cf7a825/MyProject/pywjs_test_stand/vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-48e37caa\"]])\n\nexport default __exports__","import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-dc3b4d44\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"value\", \"placeholder\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"textarea\", {\n    value: $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('update:modelValue', $event.target.value))),\n    placeholder: $props.placeholder,\n    style: _normalizeStyle($options.cssProps)\n  }, null, 44, _hoisted_1))\n}","\nexport default {\n    props: {\n        modelValue: String,\n        placeholder: {\n            type: String,\n            default: () => \"....\",\n        },\n        background: {\n            type: String,\n            default: () => \"#000\",\n        },\n        color: {\n            type: String,\n            default: () => \"#000\",\n        },\n    },\n    computed: {\n        cssProps() {\n            return {\n                \"--Фон\": this.background,\n                \"--color\": this.color,\n            };\n        },\n    },\n};\n","import { render } from \"./vtextarea.vue?vue&type=template&id=dc3b4d44&scoped=true&ts=true\"\nimport script from \"./vtextarea.vue?vue&type=script&lang=ts\"\nexport * from \"./vtextarea.vue?vue&type=script&lang=ts\"\n\nimport \"./vtextarea.vue?vue&type=style&index=0&id=dc3b4d44&lang=scss&scoped=true\"\n\nimport exportComponent from \"/media/denis/dd19b13d-bd85-46bb-8db9-5b8f6cf7a825/MyProject/pywjs_test_stand/vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dc3b4d44\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"prettyJson\" }\nconst _hoisted_2 = { ref: \"json\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, null, 512)\n  ]))\n}","export const JSONViewer = (function () {\n    var JSONViewer = function () {\n        this._dom = {};\n        this._dom.container = document.createElement(\"pre\");\n        this._dom.container.classList.add(\"json-viewer\");\n    };\n    JSONViewer.prototype.showJSON = function (json, maxLvl, colAt) {\n        maxLvl = typeof maxLvl === \"number\" ? maxLvl : -1; // max level\n        colAt = typeof colAt === \"number\" ? colAt : -1; // collapse at\n\n        var jsonData = this._processInput(json);\n        var walkEl = this._walk(jsonData, maxLvl, colAt, 0);\n\n        this._dom.container.innerHTML = \"\";\n        this._dom.container.appendChild(walkEl);\n    };\n\n    /**\n     * Get container with pre object - this container is used for visualise JSON data.\n     *\n     * @return {Element}\n     */\n    JSONViewer.prototype.getContainer = function () {\n        return this._dom.container;\n    };\n\n    /**\n     * Process input JSON - throws exception for unrecognized input.\n     *\n     * @param {Object|Array} json Input value\n     * @return {Object|Array}\n     */\n    JSONViewer.prototype._processInput = function (json) {\n        if (json && typeof json === \"object\") {\n            return json;\n        } else {\n            throw \"Input value is not object or array!\";\n        }\n    };\n\n    /**\n     * Recursive walk for input value.\n     *\n     * @param {Object|Array} value Input value\n     * @param {Number} maxLvl Process only to max level, where 0..n, -1 unlimited\n     * @param {Number} colAt Collapse at level, where 0..n, -1 unlimited\n     * @param {Number} lvl Current level\n     */\n    JSONViewer.prototype._walk = function (value, maxLvl, colAt, lvl) {\n        var frag = document.createDocumentFragment();\n        var isMaxLvl = maxLvl >= 0 && lvl >= maxLvl;\n        var isCollapse = colAt >= 0 && lvl >= colAt;\n\n        switch (typeof value) {\n            case \"object\":\n                if (value) {\n                    var isArray = Array.isArray(value);\n                    var items = isArray ? value : Object.keys(value);\n\n                    if (lvl === 0) {\n                        // root level\n                        var rootCount = this._createItemsCount(items.length);\n                        // hide/show\n                        var rootLink = this._createLink(isArray ? \"[\" : \"{\");\n\n                        if (items.length) {\n                            rootLink.addEventListener(\n                                \"click\",\n                                function () {\n                                    if (isMaxLvl) return;\n\n                                    rootLink.classList.toggle(\"collapsed\");\n                                    rootCount.classList.toggle(\"hide\");\n\n                                    // main list\n                                    this._dom.container\n                                        .querySelector(\"ul\")\n                                        .classList.toggle(\"hide\");\n                                }.bind(this)\n                            );\n\n                            if (isCollapse) {\n                                rootLink.classList.add(\"collapsed\");\n                                rootCount.classList.remove(\"hide\");\n                            }\n                        } else {\n                            rootLink.classList.add(\"empty\");\n                        }\n\n                        rootLink.appendChild(rootCount);\n                        frag.appendChild(rootLink);\n                    }\n\n                    if (items.length && !isMaxLvl) {\n                        var len = items.length - 1;\n                        var ulList = document.createElement(\"ul\");\n                        ulList.setAttribute(\"data-level\", lvl);\n                        ulList.classList.add(\n                            \"type-\" + (isArray ? \"array\" : \"object\")\n                        );\n\n                        items.forEach(function (key, ind) {\n                            var item = isArray ? key : value[key];\n                            var li = document.createElement(\"li\");\n\n                            if (typeof item === \"object\") {\n                                var isEmpty = false;\n\n                                // null && date\n                                if (!item || item instanceof Date) {\n                                    li.appendChild(\n                                        document.createTextNode(\n                                            isArray ? \"\" : key + \": \"\n                                        )\n                                    );\n                                    li.appendChild(\n                                        this._createSimple(item ? item : null)\n                                    );\n                                }\n                                // array & object\n                                else {\n                                    var itemIsArray = Array.isArray(item);\n                                    var itemLen = itemIsArray\n                                        ? item.length\n                                        : Object.keys(item).length;\n\n                                    // empty\n                                    if (!itemLen) {\n                                        li.appendChild(\n                                            document.createTextNode(\n                                                key +\n                                                    \": \" +\n                                                    (itemIsArray ? \"[]\" : \"{}\")\n                                            )\n                                        );\n                                    } else {\n                                        // 1+ items\n                                        var itemTitle =\n                                            (typeof key === \"string\"\n                                                ? key + \": \"\n                                                : \"\") +\n                                            (itemIsArray ? \"[\" : \"{\");\n                                        var itemLink =\n                                            this._createLink(itemTitle);\n                                        var itemsCount =\n                                            this._createItemsCount(itemLen);\n\n                                        // maxLvl - only text, no link\n                                        if (maxLvl >= 0 && lvl + 1 >= maxLvl) {\n                                            li.appendChild(\n                                                document.createTextNode(\n                                                    itemTitle\n                                                )\n                                            );\n                                        } else {\n                                            itemLink.appendChild(itemsCount);\n                                            li.appendChild(itemLink);\n                                        }\n\n                                        li.appendChild(\n                                            this._walk(\n                                                item,\n                                                maxLvl,\n                                                colAt,\n                                                lvl + 1\n                                            )\n                                        );\n                                        li.appendChild(\n                                            document.createTextNode(\n                                                itemIsArray ? \"]\" : \"}\"\n                                            )\n                                        );\n\n                                        var list = li.querySelector(\"ul\");\n                                        var itemLinkCb = function () {\n                                            itemLink.classList.toggle(\n                                                \"collapsed\"\n                                            );\n                                            itemsCount.classList.toggle(\"hide\");\n                                            list.classList.toggle(\"hide\");\n                                        };\n\n                                        // hide/show\n                                        itemLink.addEventListener(\n                                            \"click\",\n                                            itemLinkCb\n                                        );\n\n                                        // collapse lower level\n                                        if (colAt >= 0 && lvl + 1 >= colAt) {\n                                            itemLinkCb();\n                                        }\n                                    }\n                                }\n                            }\n                            // simple values\n                            else {\n                                // object keys with key:\n                                if (!isArray) {\n                                    li.appendChild(\n                                        document.createTextNode(key + \": \")\n                                    );\n                                }\n\n                                // recursive\n                                li.appendChild(\n                                    this._walk(item, maxLvl, colAt, lvl + 1)\n                                );\n                            }\n\n                            // add comma to the end\n                            if (ind < len) {\n                                li.appendChild(document.createTextNode(\",\"));\n                            }\n\n                            ulList.appendChild(li);\n                        }, this);\n\n                        frag.appendChild(ulList);\n                    } else if (items.length && isMaxLvl) {\n                        var itemsCount = this._createItemsCount(items.length);\n                        itemsCount.classList.remove(\"hide\");\n\n                        frag.appendChild(itemsCount);\n                    }\n\n                    if (lvl === 0) {\n                        // empty root\n                        if (!items.length) {\n                            var itemsCount = this._createItemsCount(0);\n                            itemsCount.classList.remove(\"hide\");\n\n                            frag.appendChild(itemsCount);\n                        }\n\n                        // root cover\n                        frag.appendChild(\n                            document.createTextNode(isArray ? \"]\" : \"}\")\n                        );\n\n                        // collapse\n                        if (isCollapse) {\n                            frag.querySelector(\"ul\").classList.add(\"hide\");\n                        }\n                    }\n                    break;\n                }\n\n            default:\n                // simple values\n                frag.appendChild(this._createSimple(value));\n                break;\n        }\n\n        return frag;\n    };\n\n    /**\n     * Create simple value (no object|array).\n     *\n     * @param  {Number|String|null|undefined|Date} value Input value\n     * @return {Element}\n     */\n    JSONViewer.prototype._createSimple = function (value) {\n        var spanEl = document.createElement(\"span\");\n        var type = typeof value;\n        var txt = value;\n\n        if (type === \"string\") {\n            txt = '\"' + value + '\"';\n        } else if (value === null) {\n            type = \"null\";\n            txt = \"null\";\n        } else if (value === undefined) {\n            txt = \"undefined\";\n        } else if (value instanceof Date) {\n            type = \"date\";\n            txt = value.toString();\n        }\n\n        spanEl.classList.add(\"type-\" + type);\n        spanEl.innerHTML = txt;\n\n        return spanEl;\n    };\n\n    /**\n     * Create items count element.\n     *\n     * @param  {Number} count Items count\n     * @return {Element}\n     */\n    JSONViewer.prototype._createItemsCount = function (count) {\n        var itemsCount = document.createElement(\"span\");\n        itemsCount.classList.add(\"items-ph\");\n        itemsCount.classList.add(\"hide\");\n        itemsCount.innerHTML = this._getItemsTitle(count);\n\n        return itemsCount;\n    };\n\n    /**\n     * Create clickable link.\n     *\n     * @param  {String} title Link title\n     * @return {Element}\n     */\n    JSONViewer.prototype._createLink = function (title) {\n        var linkEl = document.createElement(\"a\");\n        linkEl.classList.add(\"list-link\");\n        linkEl.href = \"javascript:void(0)\";\n        linkEl.innerHTML = title || \"\";\n\n        return linkEl;\n    };\n\n    /**\n     * Get correct item|s title for count.\n     *\n     * @param  {Number} count Items count\n     * @return {String}\n     */\n    JSONViewer.prototype._getItemsTitle = function (count) {\n        var itemsTxt = count > 1 || count === 0 ? \"items\" : \"item\";\n\n        return count + \" \" + itemsTxt;\n    };\n\n    return JSONViewer;\n})();\n","\nimport { JSONViewer } from \"./prettyJson\";\n\nexport default {\n    // Переменные\n    data() {\n        return {\n            jsonViewer: new JSONViewer(),\n        };\n    },\n    props: {\n        JsonPretty: Object,\n    },\n    watch: {\n        // Отслеживаем изменения `JsonPretty` и вызываем отрисовку\n        JsonPretty: {\n            handler(newValue) {\n                this.jsonViewer.showJSON(newValue);\n            },\n            deep: true,\n        },\n    },\n    mounted() {\n        // Монтируем окно для вывода красивого JSON\n        this.$refs.json.appendChild(this.jsonViewer.getContainer());\n        // Отображаем JSON\n        this.jsonViewer.showJSON(this.JsonPretty);\n    },\n};\n","import { render } from \"./prettyJson.vue?vue&type=template&id=25c6a67e&ts=true\"\nimport script from \"./prettyJson.vue?vue&type=script&lang=ts\"\nexport * from \"./prettyJson.vue?vue&type=script&lang=ts\"\n\nimport \"./prettyJson.vue?vue&type=style&index=0&id=25c6a67e&lang=scss\"\n\nimport exportComponent from \"/media/denis/dd19b13d-bd85-46bb-8db9-5b8f6cf7a825/MyProject/pywjs_test_stand/vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"button\", null, [\n    _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n  ]))\n}","\nexport default {\n    // Переменные\n    data() {\n        return {\n            // ИмяПеременной: ЗначениеПоУмолчанию,\n        };\n    },\n    // Методы\n    methods: {},\n};\n","import { render } from \"./vbutton.vue?vue&type=template&id=a778464a&scoped=true&ts=true\"\nimport script from \"./vbutton.vue?vue&type=script&lang=ts\"\nexport * from \"./vbutton.vue?vue&type=script&lang=ts\"\n\nimport \"./vbutton.vue?vue&type=style&index=0&id=a778464a&lang=scss&scoped=true\"\n\nimport exportComponent from \"/media/denis/dd19b13d-bd85-46bb-8db9-5b8f6cf7a825/MyProject/pywjs_test_stand/vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a778464a\"]])\n\nexport default __exports__","\nimport Vselect from \"./UI/vselect.vue\";\nimport Vtextarea from \"./UI/vtextarea.vue\";\nimport PrettyJson from \"wbs/vue/pyjs_log/prettyJson/prettyJson.vue\";\nimport Vbutton from \"./UI/vbutton.vue\";\nimport { TTypeSend as TTypeSend, TTemplateTestSend } from \"../App.vue\";\n\nexport default {\n    emits: [\n        \"send\",\n        \"send_force\",\n        \"send_dependent\",\n        \"send_transaction\",\n        \"send_before\",\n    ],\n    // Компоненты\n    components: { Vbutton, Vtextarea, Vselect, PrettyJson },\n    // Аргументы\n    props: {\n        // На какой h_id ожидать ответ сервера\n        get_h_id: Number,\n        // Описание того что происходит\n        label: String,\n        // Шаблоны запросов\n        template: Object as () => TTemplateTestSend,\n        // Варианты отправки\n        type_send: Object as () => TTypeSend[],\n        //\n        token: String,\n        host: String,\n        port: String,\n    },\n    data() {\n        return {\n            // Запрос на сервер\n            request: \"\",\n            // Выбранный шаблон\n            selectTemplate: \"\",\n            // Выбранный вариант отправки\n            selectSend: \"\",\n        };\n    },\n    // Методы\n    methods: {\n        // Вызвать событие отправки\n        ClickSend() {\n            this.$emit(this.selectSend, this.request);\n        },\n        // Изменить запрос на выбранный шаблон\n        SelectChangeTemplate() {\n            this.request = this.template[this.selectTemplate];\n        },\n    },\n    computed: {\n        // Перехватываем ответ\n        Response() {\n            const r = this.$store.state.wbs.res.value[this.get_h_id];\n            return r ? r : {};\n        },\n    },\n\n    mounted() {\n        // Отправка сообщения по комбинации `ctrl_l+enter`\n        this._keyListener = function (e) {\n            if (e.key == \"Enter\" && (e.ctrlKey || e.metaKey)) {\n                e.preventDefault();\n                this.ClickSend();\n            }\n        };\n        document.addEventListener(\"keydown\", this._keyListener.bind(this));\n    },\n    beforeDestroy() {\n        document.removeEventListener(\"keydown\", this._keyListener);\n    },\n};\n","import { render } from \"./testUseServer.vue?vue&type=template&id=2bc94a64&scoped=true&ts=true\"\nimport script from \"./testUseServer.vue?vue&type=script&lang=ts\"\nexport * from \"./testUseServer.vue?vue&type=script&lang=ts\"\n\nimport \"./testUseServer.vue?vue&type=style&index=0&id=2bc94a64&lang=scss&scoped=true\"\n\nimport exportComponent from \"/media/denis/dd19b13d-bd85-46bb-8db9-5b8f6cf7a825/MyProject/pywjs_test_stand/vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2bc94a64\"]])\n\nexport default __exports__","import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2786824e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"value\"]\nconst _hoisted_2 = { class: \"log\" }\nconst _hoisted_3 = { class: \"log__use\" }\nconst _hoisted_4 = { class: \"h_id_s\" }\nconst _hoisted_5 = [\"h_id\", \"value\"]\nconst _hoisted_6 = { class: \"log__info\" }\nconst _hoisted_7 = { class: \"url_connect\" }\nconst _hoisted_8 = { class: \"wbsStatus\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_PrettyJson = _resolveComponent(\"PrettyJson\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", {\n      onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => ($options.hiddenWindow && $options.hiddenWindow(...args))),\n      class: \"log__status\"\n    }, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"status_code\", {\n                connect: $options.wbsStatusCode == 1,\n                wait_connect: $options.wbsStatusCode == 2,\n                error_connect: $options.wbsStatusCode == 3,\n            }])\n      }, null, 2),\n      _createElementVNode(\"input\", {\n        type: \"button\",\n        value: $options.isHideShow\n      }, null, 8, _hoisted_1)\n    ]),\n    _withDirectives(_createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.ArrayH_ID, (it) => {\n            return (_openBlock(), _createElementBlock(\"input\", {\n              class: _normalizeClass([\"h_id\", {\n                        update: it[1].is_update,\n                        select: it[1].is_select,\n                    }]),\n              type: \"button\",\n              h_id: it[0],\n              key: it[0],\n              value: it[1].alias,\n              onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => ($options.clickHID && $options.clickHID(...args)))\n            }, null, 10, _hoisted_5))\n          }), 128))\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_6, [\n        _createElementVNode(\"div\", _hoisted_7, [\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (($data.UrlFromNewConnect) = $event)),\n            placeholder: \"ws://host:port/  |  Подключиться на новый URL ?\"\n          }, null, 512), [\n            [_vModelText, $data.UrlFromNewConnect]\n          ]),\n          _createElementVNode(\"input\", {\n            type: \"button\",\n            value: \"Переподключиться\",\n            onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => ($options.ConnectNewUrl && $options.ConnectNewUrl(...args)))\n          })\n        ]),\n        _createElementVNode(\"div\", _hoisted_8, _toDisplayString($options.wbsStatus), 1),\n        _createVNode(_component_PrettyJson, { JsonPretty: $data.textViewH_ID }, null, 8, [\"JsonPretty\"])\n      ])\n    ], 512), [\n      [_vShow, $data.isShow == true]\n    ])\n  ], 64))\n}","export interface DT_HelpAllowed {\n    /*AUTO_GEN:2022-11-13 20:31:52.891059\n\n    Структура подсказки доступной функции\n    \t\n*/\n    //  Аннотация типов\n    annotations: string;\n    //  Документация в начале в тройных кавычках\n    doc: string;\n    //  Имя функции\n    name: string;\n    //  Полный путь к функции(Класс.ИмяФункции)\n    qualname: string;\n}\nexport enum WbsCloseStatus {\n    /*AUTO_GEN:2022-11-13 20:31:52.891125\n\t\n*/\n    //  https://github.com/Luka967/websocket-close-codes\n\n    //  Нормальное закрытие\n    normal = 1000,\n    //  Покидание страницы, клиент закрыл вкладку\n    lose_clients = 1001,\n    //  Слишком большой ответ от сервера\n    big_response = 1009,\n    //  Зарыть соединение по причине ошибки внутренней сервера\n    server_error = 1011,\n    //  Закрыть соединение по причине перезагрузки сервера\n    server_reload = 1012,\n    //  Закрыть соединение с серверов чтобы потом снова его открыть\n    server_again = 1013,\n    //  Ошибка в TSL рукопожатие\n    tls_error = 1015,\n    //  4000-4999 Свободные коды\n\n    //  Ошибка аутентификации\n    authentication_error = 4001,\n    // Разрыв соединения для подключения к другому url\n    disconnect_then_reconnect_new_url = 4002,\n}\nexport enum ClientsWbsRequest_Mod {\n    /*AUTO_GEN:2022-11-13 20:31:52.891147\n\n    Модификации для запроса\n    \t\n*/\n    //  ClientsWbsRequest_GetInfoServer - Доступные функция для вызова\n    info = 1,\n    //  ClientsWbsRequest_AllowedFunc - Вызов доступной функции\n    func = 2,\n    //  ClientsWbsRequest_ExeCommand - Выполнить произвольную команду\n    exec = 3,\n    //  ClientsWbsRequest_ImportFromServer - Импорт на сервер указанных библиотек\n    import_from_server = 4,\n    //  ClientsWbsRequest_CreateSubscribe - Клиент создает событие\n    event_create = 5,\n    //  ClientsWbsRequest_SubscribeEvent - Клиент подписывается на событие\n    event_sub = 6,\n    //  ClientsWbsRequest_UnSubscribeEvent - Клиент подписывается на событие\n    event_unsub = 7,\n    //  ClientsWbsRequest_CacheAddKey - Записать пользовательский кеш по ключу\n    cache_add_key = 8,\n    //  ClientsWbsRequest_CacheReadKey - Прочитать пользовательский кеш по ключу\n    cache_read_key = 9,\n}\nexport enum ClientsWbsRequest_ModAlternatives {\n    /*AUTO_GEN:2022-11-13 20:31:52.891166\n\n    Альтернативные модификации для запроса, будут использоваться для замены модификаций `ClientsWbsRequest_Mod`\n    на более специфичные\n    \t\n*/\n    //  Выполнить процедуру в режиме транзакции (ClientsWbsRequest_AllowedFunc)\n    transaction_func = 101,\n}\nexport interface ClientsWbsRequest_ImportFromServer {\n    /*AUTO_GEN:2022-11-13 20:31:52.891172\n\n    Импорт на сервер указанных библиотек\n    \t\n*/\n    //  Список библиотек\n    import_sts_exe: string;\n}\nexport interface ClientsWbsRequest_AllowedFunc {\n    /*AUTO_GEN:2022-11-13 20:31:52.891180\n\n    Исполнение разрешенных функций\n    \t\n*/\n    //  Какую функцию выполнить\n    n_func: string;\n    //  Позиционные аргументы\n    args: any[] | undefined;\n    //  Именованные аргументы\n    kwargs: object | undefined;\n}\nexport interface ClientsWbsRequest_CreateSubscribe {\n    /*AUTO_GEN:2022-11-13 20:31:52.891197\n\n    Клиент создает событие на сервере\n    \t\n*/\n    //  Имя события на которое подписываетесь\n    n_func: string;\n    //  Модификация события,\n\n    //  например если нужно выполнить одну и туже функцию, но с разными\n\n    //  аргументами.\n    mod: string;\n    //  Позиционные аргументы\n    args: any[] | undefined;\n    //  Именованные аргументы\n    kwargs: object | undefined;\n}\nexport interface ClientsWbsRequest_SubscribeEvent {\n    /*AUTO_GEN:2022-11-13 20:31:52.891213\n\n    Клиент подписывается на существующие события сервера\n    \t\n*/\n    //  Имя события на которое подписываетесь\n    n_func: string;\n    //  Модификация события,\n\n    //  например если нужно выполнить одну и туже функцию, но с разными\n\n    //  аргументами.\n    mod: string;\n}\nexport interface ClientsWbsRequest_UnSubscribeEvent {\n    /*AUTO_GEN:2022-11-13 20:31:52.891221\n\n    Клиент отписывается от события на сервере\n    \t\n*/\n    //  Имя события от которого отписываетесь\n    n_func: string;\n    //  Модификация события,\n\n    //  например если нужно выполнить одну и туже функцию, но с разными\n\n    //  аргументами.\n    mod: string;\n}\nexport interface ClientsWbsRequest_CacheAddKey {\n    /*AUTO_GEN:2022-11-13 20:31:52.891230\n\n    Записать пользовательский кеш по ключу\n    \t\n*/\n    //  Пользователь\n    user: string;\n    //  Ключ\n    key: string;\n    //  Значение\n    value: string;\n}\nexport interface ClientsWbsRequest_CacheReadKey {\n    /*AUTO_GEN:2022-11-13 20:31:52.891239\n\n    Прочитать пользовательский кеш по ключу\n    \t\n*/\n    //  Пользователь\n    user: string;\n    //  Ключ\n    key: string;\n}\nexport interface ClientsWbsRequest_ExeCommand {\n    /*AUTO_GEN:2022-11-13 20:31:52.891247\n\n    Исполнение произвольной команды\n    \t\n*/\n    //  Произвольная команда на языке Python, которая выполниться на сервера.\n    exec: string;\n}\nexport enum ClientsWbsRequest_GetInfoServer_id {\n    /*AUTO_GEN:2022-11-13 20:31:52.891252\n\t\n*/\n    //  Получить список доступных функций\n    help_allowed = 1,\n    //  Проверка токена\n    check_token = 2,\n    //  Получить информацию о запущенных \"событий сервера\"\n    info_event = 3,\n}\nexport interface ClientsWbsRequest_GetInfoServer {\n    /*AUTO_GEN:2022-11-13 20:31:52.891260\n\n    Получить информацию о сервере\n    \t\n*/\n    //  ID информационной команды\n    id_r: ClientsWbsRequest_GetInfoServer_id;\n    //  Текст для информационной команды\n    text: string | undefined;\n}\nexport interface ClientsWbsRequest {\n    /*AUTO_GEN:2022-11-13 20:31:52.891282\n\n    Запрос клиента, для сервера\n    \t\n*/\n    //  Модификации для запроса.\n    mod: ClientsWbsRequest_Mod | ClientsWbsRequest_ModAlternatives;\n    //  Нужен для того чтобы можно было разными способами обрабатывать ответ на\n\n    //  стороне клиента.\n    h_id: number;\n    //  Идентификатор команды, нужен если используется асинхронность\n    uid_c: number;\n    //  Тело запроса\n    body:\n        | ClientsWbsRequest_ExeCommand\n        | ClientsWbsRequest_GetInfoServer\n        | ClientsWbsRequest_ImportFromServer\n        | ClientsWbsRequest_CreateSubscribe\n        | ClientsWbsRequest_AllowedFunc\n        | ClientsWbsRequest_CacheAddKey\n        | ClientsWbsRequest_CacheReadKey;\n    //  Время отправки сообщения от клиента в UNIX формате.\n    t_send: number;\n}\nexport enum WbsResponseCode {\n    /*AUTO_GEN:2022-11-13 20:31:52.891350\n\n    Список кодов ответа\n    \t\n*/\n    //  Ошибка валидации запроса от клиента\n    error_parse_request_clients = 100,\n    //  Ошибка выполнения команды на стороне сервера\n    error_server = 101,\n    //  Ошибка аутентификации по токену\n    token_error = 102,\n    //  Успешное выполнение\n    ok = 200,\n    //  Сообщение в качестве уведомления\n    notify = 201,\n    //  Произошел откат транзакции, по причине клиента(например превышено время\n\n    //  ожидания ответа)\n    rollback_from_clients = 401,\n    //  Произошел откат транзакции, по причине сервера\n    rollback_from_server = 402,\n}\nexport interface ServerWbsResponse {\n    /*AUTO_GEN:2022-11-13 20:31:52.891365\n\n    Ответ от сервера, для клиента\n    \t\n*/\n    //  Нужен для того чтобы можно было разными способами обрабатывать ответ на\n\n    //  стороне клиента.\n    h_id: number;\n    //  Идентификатор команды, нужен если используется асинхронность\n    uid_c: number;\n    //  Код ответа\n    code: WbsResponseCode;\n    //  Время отправки сообщения от клиента в UNIX формате.\n    t_send: number;\n    //  Время выполнения(t_send из запроса - t_send из ответа), заполняется на\n\n    //  стороне клиента.\n    t_exec: number;\n    //  Текст ошибки\n    error: string;\n    //  Ответ\n    response: string;\n}\n","import {\n    ClientsWbsRequest_AllowedFunc,\n    ClientsWbsRequest_ExeCommand,\n    ClientsWbsRequest_GetInfoServer,\n    ClientsWbsRequest_ImportFromServer,\n    ServerWbsResponse,\n    WbsResponseCode,\n    ClientsWbsRequest,\n    WbsCloseStatus,\n    ClientsWbsRequest_GetInfoServer_id,\n    ClientsWbsRequest_ModAlternatives,\n    ClientsWbsRequest_Mod,\n    ClientsWbsRequest_CacheAddKey,\n    ClientsWbsRequest_CreateSubscribe,\n    ClientsWbsRequest_CacheReadKey,\n} from \"./wbs_type\";\n/* ------------------------------------------------------------------ */\n\nconst ClientsWbsRequest_Mod_ = ClientsWbsRequest_Mod;\nconst ClientsWbsRequest_ModAlternatives_ = ClientsWbsRequest_ModAlternatives;\nconst WbsResponseCode_ = WbsResponseCode;\n/* ------------------------------------------------------------------ */\n\ntype T_callback_onopen = (event?: MessageEvent) => void;\ntype T_callback_onmessage = (event: MessageEvent) => void;\ntype T_callback_onclose = (event: CloseEvent) => void;\ntype T_callback_onerror = (event: Event) => void;\ntype T_event_connect = () => void;\ntype T_event_error_connect = () => void;\ntype T_TimeoutID = number;\n\n/* Статусы подключения по WebSocket */\nexport enum WbsConnectStatus {\n    // WebSocket подключен\n    connect = 1,\n    // WebSocket подключается\n    wait_connect = 2,\n    // WebSocket ошибка подключения\n    error_connect = 3,\n}\n\n/* Аргументы в функцию для отправки сообщения */\nexport interface SendParams {\n    //  Модификации для запроса.\n    mod: ClientsWbsRequest_Mod | ClientsWbsRequest_ModAlternatives;\n    //  Нужен для того чтобы можно было разными способами обрабатывать ответ на стороне клиента.\n    h_id: number;\n    //  Идентификатор команды, следующая команда с таким uid не выполниться пока не выполнилась текущая.\n    uid_c?: number | undefined;\n    //  Тело запроса\n    body:\n        | ClientsWbsRequest_ExeCommand\n        | ClientsWbsRequest_GetInfoServer\n        | ClientsWbsRequest_ImportFromServer\n        | ClientsWbsRequest_CreateSubscribe\n        | ClientsWbsRequest_AllowedFunc\n        | ClientsWbsRequest_CacheAddKey\n        | ClientsWbsRequest_CacheReadKey;\n}\n/* Тип для аргументов последовательной отправки */\nexport interface SendParamsBefore extends SendParams {\n    after: (last_res: ServerWbsResponse) => {};\n}\n/* ---------------------- Для транзакций  -------------------------------------------- */\n/* Аргументы в функцию для отправки сообщения в режиме транзакции */\nexport interface SendParamsTransaction extends SendParams {\n    rollback: TRollback;\n}\n\n/* Варианты ошибок в транзакции для функции rollback */\nexport enum TRollbackErrorCode {\n    // Транзакция с таким uid_c уже существует.\n    duplicate_uid = 1,\n    // Привешено время ожидания уведомления от сервера, о том что он получил сообщение.\n    timeout_notify = 2,\n    // Привешено время ожидания ответа от сервера на переданную команду.\n    timeout_response = 3,\n    // Ошибка при выполнение на стороне севера.\n    error_server = 4,\n}\n/* Функция отката дри возникновение ошибки в транзакции */\nexport type TRollback = (\n    error_code: TRollbackErrorCode,\n    h_id: number,\n    uid_c: number,\n    res_server_json: ServerWbsResponse | undefined\n) => any;\n\n/* Статусы в транзакт листе*/\nexport enum TTransaction_setStatus {\n    create = 0,\n    get_notify = 1,\n    get_response = 2,\n    rollback = 3,\n}\n/* Структура для транзакт листа */\nexport interface TTransaction_set {\n    [key: number]: {\n        status: TTransaction_setStatus;\n        timeoutID_notify: T_TimeoutID;\n        timeoutID_response: T_TimeoutID;\n        rollback_because_error: CallableFunction;\n    };\n}\n\n/* ------------------------------------------------------------------ */\n/* Логика WebSocket */\n// Сколько по умолчанию ждать ответ от сервера\nconst _timeout_ms: number = 2000;\nexport class Wbs {\n    /*\n\tПример описан в `readme.md/Интеграция/JS`\n\t*/\n    /////////////////////////////////////////////////////\n    // Множество для хранения `uid` на которые нужно обязательно получить ответ от сервера\n    force_set: Set<number>;\n    // Множество для хранения `uid` которые выполняются в транзакции\n    transaction_dict: TTransaction_set;\n    // Словарь для \"последовательной отправки сообщений\" {uid_c:ФункцияКоторуюВыполнитьПослеПолученияУспешногоОтвета}\n    before_map: Map<number, CallableFunction>;\n    // Токен для сервера\n    token: string;\n    // Статус токина\n    w_status: number;\n    // Имя текущего пользователя\n    user: string;\n    /////////////////////////////////////////////////////\n    // Подключение\n    _wbs_connect: WebSocket;\n    // Url для подключения к WebSocket\n    _wbs_url: string;\n    // Список команд которые считаются зависимостями\n    _dependent_list: any[];\n    // Указывает на то что было переподключение\n    _is_reconnected: boolean = false;\n    // Идентификатор интервала переподключения к серверу\n    _idInterval_smart_connect: number = undefined;\n    // Функция обновления статуса\n    callback_update_status: (\n        status_code: WbsConnectStatus,\n        status_text: string\n    ) => void | undefined;\n    // Генератор дл uid_c, гарантирует уникальность uid_c\n    _generator_uid_c: number;\n    constructor(\n        token: string,\n        {\n            host = <string>\"localhost\",\n            port = <number>9999,\n            callback_onopen = (event?: MessageEvent) => {},\n            callback_onmessage = (response: ServerWbsResponse) => {},\n            callback_onclose = (event: CloseEvent) => {},\n            callback_onerror = (event: Event) => {},\n            event_connect = () => {},\n            event_error_connect = () => {},\n            callback_update_status: callback_updateS_status = (\n                status_code: WbsConnectStatus,\n                status_text: string\n            ) => {},\n            user = \"base\",\n        } = {}\n    ) {\n        /*\n\t\ttoken: Токен для сервера. Это обеспечивает безопасность для сервера, \n\t\t\tте кто указывает не верный токен, не получают доступ к серверу,\n\t\t\tи заносятся во временный черный список.\n\n\t\thost: Хост\n\t\tport: Порт\n\n\t\tcallback_onopen: Функция для отправки сообщений на сервер через WebSocket. Вызовется один раз при инициализации \n\t\tcallback_onmessage: Функция для получения сообщений от сервера через WebSocket. \n\n\t\tcallback_onclose: Функция обработка закрытия соединения с сервером.\n\t\tcallback_onerror: Функция обработок ошибок при отправке на сервер.\n\n\t\tevent_connect: Событие = Успешное подключение к серверу, будет вызываться при каждом успешном подключение. \n\t\tevent_error_connect: Событие = Не удалось подключиться к серверу.\n\n        CallbackUpdateStatus: Функция обрабатывающая изменения статуса подключения в Web Socket\n\n\t\t*/\n        this.force_set = new Set();\n        this.transaction_dict = {};\n        this.token = token;\n        this.w_status = 0;\n        this.user = user;\n        this.before_map = new Map();\n        this._generator_uid_c = 0;\n        this.callback_update_status = callback_updateS_status;\n        this._dependent_list = [];\n        this._wbs_url = `ws://${host}:${port}/`;\n        // Инициализация подключения по протоколу WebSocket к Python серверу\n        let tmp_wbs = new WebSocket(this._wbs_url);\n        // ------------------ Заранее указываем функции ----------------------\n        // Функция в которой происходит отправка.\n        tmp_wbs.onopen = (event) => {\n            // Если это первое подключение, то отчищаем(не ждем) интервал переподключения к серверу.\n            clearInterval(this._idInterval_smart_connect);\n            // Обновляем статус \"на подключено\"\n            this._update_status(\n                WbsConnectStatus.connect,\n                `Успешное подключение к ${this._wbs_connect.url}`\n            );\n            // Первым сообщением отправляем токен, для аутентификации подключения\n            this._send_token();\n            // Вызываем пользовательский обработчик события подключения к серверу\n            if (event_connect) event_connect();\n            // Вызываем пользовательскую функцию\n            if (callback_onopen !== undefined)\n                callback_onopen(<MessageEvent>event);\n        };\n        // Функция получения ответа от сервер\n        tmp_wbs.onmessage = (event) => {\n            let res_server_json = <ServerWbsResponse>JSON.parse(event.data);\n            // Посчитать время выполнения команды(с отправки по сети)\n            res_server_json.t_exec =\n                this._GetCurrentTime() - res_server_json.t_send;\n            // Получить uid_c из ответа сервера\n            const res_uid_c: number = res_server_json.uid_c;\n            // Если uid есть в `force_set`\n            if (this.force_set.has(res_uid_c)) {\n                // То удаляем этот uid из обязательного множества, так как это считается получением ответа от сервера\n                this.force_set.delete(res_uid_c);\n                //\n                // Проверяем запрос на вариант отправки \"Последовательное сообщение\"\n                //\n                if (this.before_map.has(res_uid_c)) {\n                    // Выполняем функцию, и передаем в ней, текущий ответ.\n                    this.before_map.get(res_uid_c)(res_server_json);\n                    // Удаляем из `before_map` так как все необходимое сделано.\n                    this.before_map.delete(res_uid_c);\n                }\n            }\n            // Если uid есть в `transaction_dict`\n            if (this.transaction_dict[res_uid_c]) {\n                // Выполняем логику транзакции\n                res_server_json = this._check_transaction(\n                    res_uid_c,\n                    res_server_json\n                );\n            }\n            // Вызываем пользовательскую функцию если она есть\n            if (callback_onmessage !== undefined)\n                callback_onmessage(res_server_json);\n        };\n        // Обработка ошибок при отправки\n        tmp_wbs.onerror = (event) => {\n            if (callback_onerror !== undefined) callback_onerror(event);\n        };\n        // Обработка закрытия соединения\n        tmp_wbs.onclose = (event: CloseEvent) => {\n            /*\n\t\t\t# Вот как принудительно закрыть соединение\n\t\t\tWebsockeT.close(КодЗакрытия_1000, \"СообщениеНаСерверУказывающийПричинуЗакрытия\");\n\t\t\t*/\n            // Если соединение было закрыто значит, будет переподключение\n            this._is_reconnected = true;\n            console.warn(`${event.code}:${event.reason}`);\n            // Вызываем пользовательскую функцию.\n            if (callback_onclose) {\n                callback_onclose(event);\n            }\n            // Пытаемся переподключиться к серверу\n            this._smart_connect(tmp_wbs, event_connect, event_error_connect);\n        };\n        this._wbs_connect = tmp_wbs;\n        // Реализуем логику обработки событий \"успешного\" и \"ошибочного\" подключения к северу.\n        this._smart_connect(tmp_wbs, event_connect, event_error_connect);\n    }\n    //\n    /* Отправить сообщение */\n    //\n    send({ mod, h_id, uid_c, body }: SendParams) {\n        // Если не указан uid_c то генерируем его.\n        if (uid_c === undefined) uid_c = this.getUidC();\n        // Если есть подключение то отправляем сообщение\n        if (\n            this._wbs_connect !== undefined &&\n            this.w_status == WbsConnectStatus.connect\n        ) {\n            /* Пред обработка тела запроса */\n            switch (mod) {\n                // Добавляем имя текущего пользователя, если не указано ни какое имя\n                case ClientsWbsRequest_Mod.cache_add_key:\n                case ClientsWbsRequest_Mod.cache_read_key: {\n                    body = <ClientsWbsRequest_CacheAddKey>body;\n                    if (!body.user) {\n                        body.user = this.user;\n                    }\n                    break;\n                }\n            }\n            //\n            // Отправка сообщения на сервер\n            //\n            this._wbs_connect.send(\n                JSON.stringify(<ClientsWbsRequest>{\n                    h_id: h_id,\n                    uid_c: uid_c,\n                    mod: mod,\n                    body: body,\n                    t_send: this._GetCurrentTime(),\n                })\n            );\n        } else {\n            console.error(\n                `Сообщение \"mod=${mod}\" не отправленное так как нет соединения`\n            );\n        }\n    }\n    /* Принудительная отправка сообщения */\n    send_force(\n        { mod, h_id, uid_c, body }: SendParams,\n        timeout_ms = <number>_timeout_ms\n    ) {\n        /*\n\t\tСообщение отправиться на сервер, но если на него не получен ответ,\n\t\tто сообщение будут снова отправлено, \n\t\tэто будет происходить пока клиент не получит ответ на свое сообщение от сервера. \n\n\t\tДругие сообщения с таким же `uid_c` не будут отправляться.\n\n\t\tНапример это нужны на случай, если связь с сервером оборвется. \n\t\tметод `_smart_connect` будет пытаться переподключиться к серверу,\n\t\tа это метод пытаться отправить сообщение\n\t\t*/\n        // Если не указан uid_c то генерируем его.\n        if (uid_c === undefined) uid_c = this.getUidC();\n\n        if (!this.force_set.has(uid_c)) {\n            this.force_set.add(uid_c);\n            // Отправляем сообщение, Если есть подключение, если его нет то сообщение отправиться через интервал\n            this.send({\n                mod: mod,\n                h_id: h_id,\n                uid_c: uid_c,\n                body: body,\n            });\n\n            // В любом случае запускам интервал проверки ответа на сообщение\n            const idInterval = setInterval(() => {\n                // Если есть подключение и на сообщение нет ответа, то отправляем его снова\n                if (\n                    this.w_status == WbsConnectStatus.connect &&\n                    this._wbs_connect !== undefined &&\n                    this.force_set.has(uid_c)\n                ) {\n                    // Пере отправлять сообщение, пока `uid` есть в транзакт листе.\n                    // Этот `uid` должен удалиться из транзакт листа когда мы получим ответ от сервера на этот `uid`\n                    this.send({\n                        mod: mod,\n                        h_id: h_id,\n                        uid_c: uid_c,\n                        body: body,\n                    });\n                } else {\n                    // Прекратить переотправку сообщения, если `uid` нет в транзакт листе\n                    clearInterval(idInterval);\n                }\n            }, timeout_ms);\n        }\n    }\n    /* Сохранение команд для зависимостей и отправка их, переотправка осуществляется в `_re_send_dependent` */\n    send_dependent(\n        { mod, h_id, uid_c, body }: SendParams,\n        timeout_ms = <number>_timeout_ms\n    ) {\n        /*\n\t\tОсобый режим отправки сообщения. В этом режиме если вы потеряли связь с сервером\n\t\tто при восстановление связи, все сообщение которые отправлены через этот метод, будут перенаправлены.\n\t\t\n\t\tЭто полезно при импорте модулей.\n\t\t*/\n        // Если не указан uid_c то генерируем его.\n        if (uid_c === undefined) uid_c = this.getUidC();\n\n        const request: any = {\n            mod: mod,\n            uid_c: uid_c,\n            d: { h_id: h_id, body: body },\n            ms: timeout_ms,\n        };\n        this._dependent_list.push(request);\n        this.send_force(\n            {\n                mod: request.mod,\n                h_id: request.d.h_id,\n                uid_c: request.uid_c,\n                body: request.d.body,\n            },\n            request.ms\n        );\n    }\n    /* Отправить сообщение в режиме транзакции */\n    send_transaction(\n        { mod, h_id, uid_c, body }: SendParams,\n        rollback: TRollback,\n        timeout_ms_notify = <number>_timeout_ms,\n        timeout_ms_response = <number>5000\n    ) {\n        /*\n        timeout_ms_notify: Время ожидания уведомления\n        timeout_ms_response: Время ожидания ответа\n        */\n        // Проверяем допустимость модификации, для передачи в транзакции\n        if (mod != ClientsWbsRequest_Mod_.func) {\n            throw new Error(\n                \"Передача в режиме транзакции поддерживается только для модификации:(func_trans)\"\n            );\n        }\n        // Замена модификации на транзакционный вариант\n        const alternative_mod =\n            ClientsWbsRequest_ModAlternatives_.transaction_func;\n        //\n        //\n        // Генерируем uid_c если он не передан\n        if (uid_c === undefined) uid_c = this.getUidC();\n        // Проверяем наличие uid_c в транзакт листе\n        if (!this.transaction_dict[uid_c]) {\n            //\n            //\n            // Добавляем uid_c в транзакт лист\n            this.transaction_dict[uid_c] = {\n                // Изначально статус равен \"Созданию\"\n                status: TTransaction_setStatus.create,\n                // Ждем уведомления от сервера, от том что он принял это сообщение.\n                timeoutID_notify: setTimeout(() => {\n                    // Если привешено ожидание уведомления, то не ожидаем результата\n                    clearTimeout(\n                        this.transaction_dict[uid_c].timeoutID_response\n                    );\n                    // Устанавливаем статус в 'rollback'\n                    this.transaction_dict[uid_c].status =\n                        TTransaction_setStatus.rollback;\n                    // Исполняем пользовательский `rollback`\n                    rollback(\n                        TRollbackErrorCode.timeout_notify,\n                        h_id,\n                        uid_c,\n                        undefined\n                    );\n                }, timeout_ms_notify),\n                // Ждем результат команды от сервера.\n                timeoutID_response: setTimeout(() => {\n                    // Устанавливаем статус в 'rollback'\n                    this.transaction_dict[uid_c].status =\n                        TTransaction_setStatus.rollback;\n                    // Исполняем пользовательский `rollback`\n                    rollback(\n                        TRollbackErrorCode.timeout_response,\n                        h_id,\n                        uid_c,\n                        undefined\n                    );\n                }, timeout_ms_response),\n                // Вызовется если при выполнение команды, произошла ошибка на стороне сервера.\n                rollback_because_error: (\n                    res_server_json: ServerWbsResponse\n                ) => {\n                    // Устанавливаем статус в 'rollback'\n                    this.transaction_dict[uid_c].status =\n                        TTransaction_setStatus.rollback;\n                    // Исполняем пользовательский `rollback`\n                    rollback(\n                        TRollbackErrorCode.error_server,\n                        h_id,\n                        uid_c,\n                        res_server_json\n                    );\n                },\n            };\n            //\n            //\n            // Отправляем сообщение\n            this.send({\n                mod: alternative_mod,\n                h_id: h_id,\n                uid_c: uid_c,\n                body: body,\n            });\n        }\n        // Если такой uid_c уже существует, то это дубликат, вызываем rollback\n        else {\n            rollback(TRollbackErrorCode.duplicate_uid, h_id, uid_c, undefined);\n        }\n    }\n    /* Последовательная отправка сообщений */\n    send_before({ mod, h_id, body, after }: SendParamsBefore) {\n        // Если не указан uid_c то генерируем его.\n        const uid_c = this.getUidC();\n        // Заносим в словарь номер запроса и функцию которую нужно выполнить после успешного получения ответа.\n        this.before_map.set(uid_c, after);\n        // Отправка через `this.send_force`, с доработками в `tmp_wbs.onmessage`, которые выполняют функцию после успешного получения ответа.\n        this.send_force({\n            mod: mod,\n            h_id: h_id,\n            body: body,\n            uid_c: uid_c,\n        });\n    }\n    //\n    //\n    //\n    /* Отправляем токен на сервер */\n    _send_token() {\n        this.send({\n            mod: ClientsWbsRequest_Mod.info,\n            h_id: -1,\n            uid_c: 0,\n            body: {\n                id_r: ClientsWbsRequest_GetInfoServer_id.check_token,\n                text: this.token,\n            },\n        });\n    }\n    /* Пере отправить все зависимости */\n    _again_send_dependent() {\n        for (const d of this._dependent_list) {\n            this.send_force(\n                {\n                    mod: d.mod,\n                    h_id: d.d.h_id,\n                    uid_c: d.uid_c,\n                    body: d.d.body,\n                },\n                d.ms\n            );\n        }\n    }\n    /* Обновление статуса подключения, и вызвать пользовательскую функцию */\n    _update_status(status_code: WbsConnectStatus, status_text: string) {\n        console.info(status_text);\n        this.w_status = status_code;\n        if (this.callback_update_status !== undefined)\n            this.callback_update_status(status_code, status_text);\n    }\n    //\n    //\n    //\n    /* Закрыть соединение */\n    close(code?: WbsCloseStatus, msg?: string) {\n        /*\n        code: Код закрытия\n        msg: Сообщение серверу\n\t\t*/\n        this._wbs_connect.close(code, msg);\n    }\n    /* Получить уникальный uid_c */\n    getUidC(): number {\n        return this._GeneratorUidC();\n    }\n    /* Подключиться к другому URL для `WebSocket` */\n    connectNewUrl(url: string) {\n        // Меняем url\n        this._wbs_url = url;\n        // Отключаемся от текущего url, а после отключения вызовется функция `_smart_connect`, которая будет\n        // пытаться подключиться по новому url\n        this.close(\n            WbsCloseStatus.disconnect_then_reconnect_new_url,\n            `NewUrl:${url}`\n        );\n    }\n    /* Логика подключения к серверу, и переподключение к нему если соединение закрыто. */\n    _smart_connect(\n        use_wbs: WebSocket,\n        event_connect: T_event_connect | undefined,\n        event_error_connect: T_event_connect | undefined,\n        mc: number = 1000\n    ) {\n        // Проверяем соединение с сервером через указанное количество миллисекунд\n        // Если соединение не удалось, то пытаемся еще раз подключиться к серверу\n        // Также вызываем пользовательские обработчики событий \"успешного\" и \"ошибочного\" подключения.\n        this._idInterval_smart_connect = setInterval(() => {\n            this._update_status(\n                WbsConnectStatus.wait_connect,\n                `Попытка подключится к ${this._wbs_connect.url} > ${this._wbs_connect.readyState}`\n            );\n            // Не удалось подключится\n            if (\n                this._wbs_connect.readyState === WbsConnectStatus.error_connect\n            ) {\n                this._update_status(\n                    WbsConnectStatus.error_connect,\n                    `Не удалось подключиться к ${\n                        this._wbs_connect.url\n                    } ${nowTime()}`\n                );\n                if (event_error_connect) event_error_connect();\n                // Переподключиться\n                this._wbs_connect = new WebSocket(this._wbs_url);\n            }\n            // Успешное подключение\n            else if (\n                this._wbs_connect.readyState === WbsConnectStatus.connect\n            ) {\n                this._update_status(\n                    WbsConnectStatus.connect,\n                    `Успешное подключение к ${this._wbs_connect.url}`\n                );\n                // Восстанавливаем функции которе были от пользователя\n                this._wbs_connect.onopen = use_wbs.onopen;\n                this._wbs_connect.onmessage = use_wbs.onmessage;\n                this._wbs_connect.onerror = use_wbs.onerror;\n                this._wbs_connect.onclose = use_wbs.onclose;\n                // Отправляем первым сообщением токен, если это переподключение(не Первое подключение)\n                if (this._is_reconnected) this._send_token();\n                // Вызываем пользовательский обработчик события подключения к серверу\n                if (event_connect) event_connect();\n                // Пере отправить зависимости, если это переподключение\n                if (this._is_reconnected) this._again_send_dependent();\n                // Прекращаем переподключение\n                clearInterval(this._idInterval_smart_connect);\n            }\n        }, mc);\n    }\n    /* Создать уникальный uid_c */\n    _GeneratorUidC() {\n        // Сбрасывать генератор если он дошел до максимального числа.\n        this._generator_uid_c =\n            (this._generator_uid_c + 1) % Number.MAX_SAFE_INTEGER;\n        return this._generator_uid_c;\n    }\n\n    /* Получить текущие время в UNIX */\n    _GetCurrentTime() {\n        return new Date().getTime() / 1000;\n    }\n\n    /* Обработка ответа в режиме транзакции */\n    _check_transaction(\n        res_uid_c: number,\n        res_server_json: ServerWbsResponse\n    ): ServerWbsResponse {\n        // Статус транзакции\n        const status: TTransaction_setStatus =\n            this.transaction_dict[res_uid_c].status;\n        // Обработка статуса\n        switch (status) {\n            // Если это сообщение только создано, и ответ в статусе \"уведомления\"\n            case TTransaction_setStatus.create: {\n                if (res_server_json.code == WbsResponseCode_.notify) {\n                    // Прекращаем ожидания уведомления\n                    clearTimeout(\n                        this.transaction_dict[res_uid_c].timeoutID_notify\n                    );\n                    // Меняем статус сообщения на \"Полученное уведомление\"\n                    this.transaction_dict[res_uid_c].status =\n                        TTransaction_setStatus.get_notify;\n                }\n                break;\n            }\n            // Если сообщение ожидает результата от сервера, на свою команду.\n            case TTransaction_setStatus.get_notify: {\n                // И ответ сервера успешный.\n                if (res_server_json.code == WbsResponseCode_.ok) {\n                    // Прекращаем ожидания результата\n                    clearTimeout(\n                        this.transaction_dict[res_uid_c].timeoutID_response\n                    );\n                    // Меняем статус сообщение на \"Получен результат\"\n                    this.transaction_dict[res_uid_c].status =\n                        TTransaction_setStatus.get_response;\n                    // Удаляем из транзакт листа\n                    delete this.transaction_dict[res_uid_c];\n                }\n                // Если во время выполнения команды, произошла ошибка на стороне сервера.\n                else if (\n                    [\n                        WbsResponseCode_.error_server,\n                        WbsResponseCode_.error_parse_request_clients,\n                    ].includes(res_server_json.code)\n                ) {\n                    // Прекращаем ожидания результата\n                    clearTimeout(\n                        this.transaction_dict[res_uid_c].timeoutID_response\n                    );\n                    // Меняем код ответа сервера, на откат, по причине сервера.\n                    res_server_json.code =\n                        WbsResponseCode_.rollback_from_server;\n                    // Выполняем rollback\n                    this.transaction_dict[res_uid_c].rollback_because_error(\n                        res_server_json.error\n                    );\n                    // Удаляем из транзакт листа\n                    delete this.transaction_dict[res_uid_c];\n                } else {\n                    alert(\"Не поддерживаемый статус ответа на транзакцию\");\n                }\n                break;\n            }\n            case TTransaction_setStatus.rollback: {\n                // Если транзакция в статусе отката(`rollback`) по причине клиента, например время ожидания превышено\n                const msg =\n                    \"Произошел `rollback` транзакции, по причине клиента\";\n                res_server_json.code = WbsResponseCode_.rollback_from_clients;\n                res_server_json.error = msg;\n                console.error(msg);\n                break;\n            }\n            default: {\n                console.log(\"Ошибка статуса транзакции\");\n            }\n        }\n        return res_server_json;\n    }\n}\n//\n// -------------  Утилиты ------------------------------------\n//\n/* Получить текущие время */\nfunction nowTime(): string {\n    const current_date = new Date();\n    return (\n        current_date.getDate() +\n        \"/\" +\n        (current_date.getMonth() + 1) +\n        \"/\" +\n        current_date.getFullYear() +\n        \" @ \" +\n        current_date.getHours() +\n        \":\" +\n        current_date.getMinutes() +\n        \":\" +\n        current_date.getSeconds()\n    );\n}\n\n/* Класс для создания объекта в котором будут храниться псевдонимы на h_id */\nexport class ClassHID {\n    /*\n    Для получения h_id по псевдониму\n    >obj.names.Псевдоним\n    Для получения псевдонима по h_id \n    >obj.ids.Псевдоним\n    */\n    // Хранит псевдонимы и указывает на h_id\n    names: { [key: string]: number } = {};\n    // Хранит h_id и указывает на псевдонимы\n    ids: { [key: number]: string } = {};\n    constructor(args_name: { [key: string]: number }) {\n        for (const i in args_name) {\n            this.names[i] = args_name[i];\n            this.ids[args_name[i]] = i;\n        }\n    }\n}\n","\nimport PrettyJson from \"./prettyJson/prettyJson.vue\";\nimport { ServerWbsResponse, WbsCloseStatus } from \"../../wbs_type\";\nimport { ClassHID, WbsConnectStatus } from \"../../wbs\";\n\ninterface TH_ID {\n    uid_c: string;\n    // Если элемент обновлен то будет true\n    is_update: boolean;\n    // Элемент выбран\n    is_select: boolean;\n    // Псевдоним для h_id\n    alias: string;\n}\ninterface TArrH_ID {\n    [key: number]: TH_ID;\n}\ninterface TAllJson {\n    [key: string]: ServerWbsResponse;\n}\nconst WbsCloseStatus_ = WbsCloseStatus;\n\nexport default {\n    components: { PrettyJson },\n    props: {\n        // Алиасы для h_id\n        hids: { type: ClassHID, default: undefined },\n    },\n    data() {\n        return {\n            // Показывать ли подробное окно\n            isShow: false,\n            // Все ответы от сервера которые хранятся в хранилище `wbsStore.ts`\n            AllJson: <TAllJson>{},\n            // Объект для отслеживания обновления в h_id путем сравнения uid_c\n            DictH_ID_CheckUid_C: <TArrH_ID>{},\n            // Текст у указанного h_id\n            textViewH_ID: <ServerWbsResponse>{},\n            // Какой h_id сейчас показан\n            viewH_ID: 0,\n            // Прошлый выбранный h_id\n            lastH_ID: <number | undefined>undefined,\n            // URL для нового подключения\n            UrlFromNewConnect: \"\",\n        };\n    },\n\n    computed: {\n        /* Делаем понятное имя того что око скрыто или нет */\n        isHideShow() {\n            return this.isShow ? \"Виден\" : \"Скрыт\";\n        },\n        /* Числовой статус соединения */\n        wbsStatusCode(): WbsConnectStatus {\n            return this.$store.state.wbs.wbsStatusCode;\n        },\n        /* Текстовый статус соединения */\n        wbsStatus() {\n            return this.$store.state.wbs.wbsStatus;\n        },\n        /* Список с доступные h_id на которые есть ответы сервера */\n        ArrayH_ID() {\n            // Выполняем логику только когда окно открыто, это такая оптимизация.\n            if (this.isShow) {\n                this.AllJson = this.$store.state.wbs.res.value;\n                //\n                // Логика обновления стаута h_id, путем сверки u_id\n                //\n                for (const h_id in this.AllJson) {\n                    const uid_c: number = this.AllJson[h_id].uid_c;\n                    // Если нет такого h_id\n                    if (!this.DictH_ID_CheckUid_C[h_id]) {\n                        // Пытаемся получить алиас на  h_id\n                        const alias: string | undefined = this.hids\n                            ? this.hids.ids[h_id]\n                            : undefined;\n                        this.DictH_ID_CheckUid_C[h_id] = {\n                            uid_c: uid_c,\n                            is_update: true,\n                            alias: alias ? alias : h_id,\n                        };\n                    }\n                    // Если есть такой h_id, то проверяем разницу по uid_c\n                    else {\n                        // Если есть разница по uid_c\n                        if (this.DictH_ID_CheckUid_C[h_id].uid_c != uid_c) {\n                            this.DictH_ID_CheckUid_C[h_id].uid_c = uid_c;\n                            this.DictH_ID_CheckUid_C[h_id].is_update = true;\n                            // Если обновился текущий h_id\n                            if (this.viewH_ID == h_id) {\n                                // То обновляем текст\n                                this.textViewH_ID = this.AllJson[h_id];\n                            }\n                        }\n                    }\n                }\n                // Сортируем по имени алиаса\n                return Object.entries(<TArrH_ID>this.DictH_ID_CheckUid_C).sort(\n                    (a: [string, TH_ID], b: [string, TH_ID]): any => {\n                        return a[1].alias > b[1].alias;\n                    }\n                );\n            }\n            return {};\n        },\n    },\n    methods: {\n        /* Принудительно разорвать соединение с сервером */\n        disconnect() {\n            this.$store.state.wbs.wbsObj.close(\n                WbsCloseStatus_.normal,\n                \"Разрыв связи из логера\"\n            );\n        },\n        /* Скрыть окно */\n        hiddenWindow() {\n            this.isShow = !this.isShow;\n        },\n        /* Нажатие на H_ID */\n        clickHID(event: Event) {\n            const elm = <HTMLInputElement>event.target;\n            if (elm) {\n                if (this.lastH_ID) {\n                    // Убираем выбор с прошлого элемента\n                    this.DictH_ID_CheckUid_C[this.lastH_ID].is_select = false;\n                }\n                const h_id = elm.attributes[\"h_id\"].value;\n                // Меняем выбранный h_id\n                this.viewH_ID = h_id;\n                // Убираем обновление\n                this.DictH_ID_CheckUid_C[h_id].is_update = false;\n                // Устанавливаем выбор\n                this.DictH_ID_CheckUid_C[h_id].is_select = true;\n                // Меняем текст из h_id\n                this.textViewH_ID = this.AllJson[h_id];\n                // Прошлый элемент это текущий\n                this.lastH_ID = h_id;\n            }\n        },\n        /* Подключиться к другому URL */\n        ConnectNewUrl() {\n            this.$store.state.wbs.wbsObj.connectNewUrl(this.UrlFromNewConnect);\n        },\n    },\n};\n","import { render } from \"./pyjs_log.vue?vue&type=template&id=2786824e&scoped=true&ts=true\"\nimport script from \"./pyjs_log.vue?vue&type=script&lang=ts\"\nexport * from \"./pyjs_log.vue?vue&type=script&lang=ts\"\n\nimport \"./pyjs_log.vue?vue&type=style&index=0&id=2786824e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/media/denis/dd19b13d-bd85-46bb-8db9-5b8f6cf7a825/MyProject/pywjs_test_stand/vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2786824e\"]])\n\nexport default __exports__","\nimport TestUseServer from \"./components/testUseServer.vue\";\nimport PyjsLog from \"wbs/vue/pyjs_log/pyjs_log.vue\";\nimport {\n    ClientsWbsRequest,\n    ClientsWbsRequest_GetInfoServer_id,\n    ClientsWbsRequest_Mod,\n    ServerWbsResponse,\n} from \"wbs/wbs_type\";\nimport { SendParamsBefore, TRollbackErrorCode } from \"wbs/wbs\";\n\nfunction strJSON(obj: object) {\n    return JSON.stringify(obj, null, 4);\n}\nexport interface TTemplateTestSend {\n    [key: string]: string;\n}\n// Варианты отправки\nexport type TTypeSend =\n    | \"send\"\n    | \"send_force\"\n    | \"send_dependent\"\n    | \"send_transaction\"\n    | \"send_before\";\n\nconst get_h_id = 89;\n\nconst token = \"sysdba\";\nconst host = \"localhost\";\nconst port = \"9999\";\n\nexport default {\n    components: {\n        PyjsLog,\n        TestUseServer,\n    },\n    data() {\n        return {\n            token: token,\n            host: host,\n            port: port,\n            // Проверка обычной отправки SEND\n            test_send: {\n                get_h_id: get_h_id,\n                type_send: <TTypeSend[]>[\n                    \"send\",\n                    \"send_force\",\n                    \"send_dependent\",\n                    \"send_transaction\",\n                    \"send_before\",\n                ],\n                template: <TTemplateTestSend>{\n                    exec: strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.exec,\n                        h_id: get_h_id,\n                        body: {\n                            exec: \"2+2\",\n                        },\n                    }),\n                    import_from_server: strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.import_from_server,\n                        h_id: get_h_id,\n                        body: {\n                            import_sts_exe: \"import os\",\n                        },\n                    }),\n                    func: strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.func,\n                        h_id: get_h_id,\n                        body: {\n                            n_func: \"os_exe_async\",\n                            args: [\"ifconfig\"],\n                            kwargs: {},\n                        },\n                    }),\n                    \"func:transaction\": strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.func,\n                        h_id: get_h_id,\n                        body: {\n                            n_func: \"readFile\",\n                            args: [\n                                \"/media/denis/dd19b13d-bd85-46bb-8db9-5b8f6cf7a825/Dowload/tes/\",\n                                \"test.txt\",\n                            ],\n                            kwargs: {},\n                        },\n                    }),\n                    \"info:help_allowed\": strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.info,\n                        h_id: get_h_id,\n                        body: {\n                            id_r: ClientsWbsRequest_GetInfoServer_id.help_allowed,\n                        },\n                    }),\n                    \"info:info_event\": strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.info,\n                        h_id: get_h_id,\n                        body: {\n                            id_r: ClientsWbsRequest_GetInfoServer_id.info_event,\n                        },\n                    }),\n                    event_create: strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.event_create,\n                        h_id: get_h_id,\n                        body: {\n                            n_func: \"watchDir\",\n                            mod: \"_\",\n                            args: [\n                                \"/media/denis/dd19b13d-bd85-46bb-8db9-5b8f6cf7a825/Dowload/\",\n                            ],\n                            kwargs: {},\n                        },\n                    }),\n                    event_sub: strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.event_sub,\n                        h_id: get_h_id,\n                        body: {\n                            n_func: \"watchDir\",\n                            mod: \"_\",\n                        },\n                    }),\n                    event_unsub: strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.event_unsub,\n                        h_id: get_h_id,\n                        body: {\n                            n_func: \"watchDir\",\n                            mod: \"_\",\n                        },\n                    }),\n                    cache_add_key: strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.cache_add_key,\n                        h_id: get_h_id,\n                        body: {\n                            key: \"current_date\",\n                            value: JSON.stringify({ date: Date.now() }),\n                            user: \"base\",\n                        },\n                    }),\n                    cache_read_key: strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.cache_read_key,\n                        h_id: get_h_id,\n                        body: {\n                            key: \"current_date\",\n                            user: \"base\",\n                        },\n                    }),\n                    send_before: strJSON(<ClientsWbsRequest>{\n                        mod: ClientsWbsRequest_Mod.cache_read_key,\n                        h_id: get_h_id,\n                        body: {\n                            key: \"current_date\",\n                            user: \"base\",\n                        },\n                    }),\n                },\n            },\n        };\n    },\n    // Методы\n    methods: {\n        send(request) {\n            const r = JSON.parse(request);\n            console.log(\"send\");\n            console.log(r);\n            this.$store.dispatch(`wbs/send`, r);\n        },\n        send_force(request) {\n            const r = JSON.parse(request);\n            console.log(\"send_force\");\n            console.log(r);\n            this.$store.dispatch(`wbs/send_force`, r);\n        },\n\n        send_dependent(request) {\n            const r = JSON.parse(request);\n            console.log(\"send_dependent\");\n            console.log(r);\n            this.$store.dispatch(`wbs/send_dependent`, r);\n        },\n        send_transaction(request) {\n            const r = JSON.parse(request);\n            console.log(\"send_transaction\");\n            r[\"rollback\"] = <TRollback>(\n                error_code: TRollbackErrorCode,\n                h_id: number,\n                uid_c: number\n            ) => {\n                alert(\n                    `Rollback:[error_code=${error_code}|h_id=${h_id}|uid_c=${uid_c}]\\nНе получилось прочитать файл.`\n                );\n            };\n            console.log(r);\n            this.$store.dispatch(`wbs/send_transaction`, r);\n        },\n        send_before(request) {\n            const r = JSON.parse(request);\n            r[\"after\"] = (last_res: ServerWbsResponse) => {\n                alert(`Прошлый запрос ${JSON.stringify(last_res, null, 2)}`);\n            };\n            console.log(\"send_before\");\n            console.log(r);\n            this.$store.dispatch(`wbs/send_before`, <SendParamsBefore>r);\n        },\n    },\n\n    beforeCreate() {\n        // Инициализируем подключение к Python серверу через Web Socket\n        this.$store.dispatch(\"wbs/initWebSocket\", {\n            token: token,\n            host: host,\n            port: port,\n        });\n    },\n};\n","import { render } from \"./App.vue?vue&type=template&id=b52c168c&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=b52c168c&lang=scss\"\n\nimport exportComponent from \"/media/denis/dd19b13d-bd85-46bb-8db9-5b8f6cf7a825/MyProject/pywjs_test_stand/vue/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {\n    SendParams,\n    SendParamsBefore,\n    SendParamsTransaction,\n    Wbs,\n    WbsConnectStatus,\n} from \"../wbs\";\nimport { ServerWbsResponse } from \"../wbs_type\";\n\nexport const wbsStore = {\n    // Доступные переменные в хранилище\n    state() {\n        return {\n            // Объект для взаимодействие с Web Socket\n            wbsObj: Object as () => WebSocket,\n            // Текстовый статус подключения к серверу через Web Socket\n            wbsStatus: \"\",\n            // Статус код подключения к серверу через Web Socket\n            wbsStatusCode: WbsConnectStatus.wait_connect,\n            // Ответ от сервера --------\n            res: { value: {} },\n            //--------------------------\n        };\n    },\n    // Вычисляемые функции аналогичные `computed`\n    getters: {},\n    // Синхронные функции для изменения данных в переменных\n    mutations: {\n        _updateWbsObj(state, newValue: WebSocket) {\n            state.wbsObj = newValue;\n        },\n        _updateWbsStatus(state, newValue: string) {\n            state.wbsStatus = newValue;\n        },\n        _updateWbsStatusCode(state, newValue: WbsConnectStatus) {\n            state.wbsStatusCode = newValue;\n        },\n        _updateResponse(state, newValue: ServerWbsResponse) {\n            state.res.value[newValue.h_id] = newValue;\n            console.log(newValue);\n        },\n    },\n    // Действия могут использоваться для асинхронных операций.\n    actions: {\n        /* Отправить запрос на сервера, в обычном режиме */\n        send({ state }, { mod, h_id, body }: SendParams) {\n            /*\n            :::Пример отправки запроса:::\n\n            this.$store.dispatch(`wbs/send`, {\n                mod: ClientsWbsRequest_Mod.exec,\n                h_id: -1,\n                body: {\n                    exec: \"2+2\",\n                },\n            });\n            */\n            state.wbsObj.send({\n                mod: mod,\n                h_id: h_id,\n                body: body,\n            });\n        },\n        /* Отправить запрос на сервера, в наглом режиме */\n        send_force({ state }, { mod, h_id, body }: SendParams) {\n            /*\n            :::Пример отправки запроса:::\n\n            this.$store.dispatch(`wbs/send`, {\n                mod: ClientsWbsRequest_Mod.exec,\n                h_id: -1,\n                body: {\n                    exec: \"2+2\",\n                },\n            });\n\n            */\n            state.wbsObj.send_force({\n                mod: mod,\n                h_id: h_id,\n                body: body,\n            });\n        },\n        /* Отправить как зависимости */\n        send_dependent({ state }, { mod, h_id, body }: SendParams) {\n            state.wbsObj.send_dependent({\n                mod: mod,\n                h_id: h_id,\n                body: body,\n            });\n        },\n        /* Отправить в транзакции */\n        send_transaction(\n            { state },\n            { mod, h_id, body, rollback }: SendParamsTransaction\n        ) {\n            state.wbsObj.send_transaction(\n                {\n                    mod: mod,\n                    h_id: h_id,\n                    body: body,\n                },\n                rollback\n            );\n        },\n        /* Последовательная отправка сообщения */\n        send_before({ state }, { mod, h_id, body, after }: SendParamsBefore) {\n            state.wbsObj.send_before({\n                mod: mod,\n                h_id: h_id,\n                body: body,\n                after: after,\n            });\n        },\n        /* Инициализация  Web Socket соединение */\n        initWebSocket(\n            { commit, dispatch },\n            {\n                host = \"localhost\",\n                port = 9999,\n                token = \"\",\n                user = \"base\",\n                after_connect = <CallableFunction>() => {},\n                destruction = <CallableFunction>() => {},\n            }\n        ) {\n            /*\n            after_connect: Что сделать после подключения к серверу\n            destruction: Обработка события window.beforeunload\n            user: Имя текущего пользователя\n            */\n\n            // Создаем подключение\n            commit(\n                \"_updateWbsObj\",\n                new Wbs(token, {\n                    host: host,\n                    port: port,\n                    callback_onopen: () => {\n                        after_connect();\n                    },\n                    callback_onmessage: (response: ServerWbsResponse) => {\n                        dispatch(\"_handleResponseFormServer\", response);\n                    },\n                    callback_onclose: () => {},\n                    callback_onerror: (event) => {},\n                    event_connect: () => {},\n                    event_error_connect: () => {},\n                    callback_update_status: (\n                        status_code: WbsConnectStatus,\n                        status_text: string\n                    ) => {\n                        dispatch(\"_onUpdateStatus\", {\n                            status_code,\n                            status_text,\n                        });\n                    },\n                    user: user,\n                })\n            );\n            // Добавляем обработчик закрытия страницы, здесь нужно выполнять отчистку ресурсов.\n            window.addEventListener(\"beforeunload\", (e) => {\n                destruction();\n                console.log(`Вызван destruction`);\n                e.preventDefault();\n                return (e.returnValue = \"Да?\");\n            });\n        },\n        /* Обработка ответа от сервера */\n        _handleResponseFormServer({ commit }, response: ServerWbsResponse) {\n            try {\n                if (response.response != \"\") {\n                    response.response = JSON.parse(response.response);\n                }\n                commit(\"_updateResponse\", response);\n            } catch (e) {\n                console.error(\n                    `Не удалось конвертировать в Json: state.responseRaw.value`\n                );\n                console.error(response);\n            }\n        },\n        /* Обработка изменения статуса подключения к Web Socket */\n        _onUpdateStatus(\n            { commit },\n            { status_code = <WbsConnectStatus>0, status_text = <string>\"\" } = {}\n        ) {\n            commit(\"_updateWbsStatusCode\", status_code);\n            commit(\"_updateWbsStatus\", status_text);\n        },\n    },\n    // Локальное пространство имен. Позволяет обращаться к мутации через `ИмяМодуляХранилища/ФункцияМутации`\n    namespaced: true,\n};\n","import { createStore } from \"vuex\";\nimport { wbsStore } from \"wbs/vue/wbsStore\";\n\nexport default createStore({\n    modules: { wbs: wbsStore },\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport store from \"./store\";\n\nconst app = createApp(App);\n\napp.use(store) // .use(router)\n    .mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpywjs_test_stand\"] = self[\"webpackChunkpywjs_test_stand\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(5651); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","class","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","_component_PyjsLog","_resolveComponent","_component_testUseServer","_openBlock","_createElementBlock","_Fragment","_createVNode","_createElementVNode","get_h_id","test_send","label","template","type_send","token","host","port","onSend","send","onSend_force","send_force","onSend_dependent","send_dependent","onSend_transaction","send_transaction","onSend_before","send_before","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_component_vtextarea","_component_vselect","_component_vbutton","_component_PrettyJson","_toDisplayString","background","color","modelValue","request","$event","selectTemplate","options","type_select","onChange","SelectChangeTemplate","selectSend","onClick","ClickSend","default","_withCtx","_createTextVNode","_","JsonPretty","Response","disabled","value","args","changeOption","key","_renderList","name","index","_createCommentVNode","__default__","props","type","String","Object","methods","event","this","$emit","target","mounted","first_select","keys","__injectCSSVars__","_useCssVars","__setup__","setup","ctx","__exports__","onInput","placeholder","style","_normalizeStyle","cssProps","computed","ref","JSONViewer","_dom","container","document","createElement","classList","add","prototype","showJSON","json","maxLvl","colAt","jsonData","_processInput","walkEl","_walk","innerHTML","appendChild","getContainer","lvl","frag","createDocumentFragment","isMaxLvl","isCollapse","isArray","Array","items","rootCount","_createItemsCount","length","rootLink","_createLink","addEventListener","toggle","querySelector","bind","remove","len","ulList","setAttribute","forEach","ind","item","li","Date","createTextNode","_createSimple","itemIsArray","itemLen","itemTitle","itemLink","itemsCount","list","itemLinkCb","spanEl","txt","undefined","toString","count","_getItemsTitle","title","linkEl","href","itemsTxt","data","jsonViewer","watch","handler","newValue","deep","$refs","_renderSlot","$slots","emits","components","Vbutton","Vtextarea","Vselect","PrettyJson","Number","r","$store","state","wbs","res","_keyListener","e","ctrlKey","metaKey","preventDefault","beforeDestroy","removeEventListener","_hoisted_8","hiddenWindow","_normalizeClass","connect","wbsStatusCode","wait_connect","error_connect","isHideShow","_withDirectives","ArrayH_ID","it","update","is_update","select","is_select","h_id","alias","clickHID","UrlFromNewConnect","_vModelText","ConnectNewUrl","wbsStatus","textViewH_ID","_vShow","isShow","WbsCloseStatus","ClientsWbsRequest_Mod","ClientsWbsRequest_ModAlternatives","ClientsWbsRequest_GetInfoServer_id","WbsResponseCode","ClientsWbsRequest_Mod_","ClientsWbsRequest_ModAlternatives_","WbsResponseCode_","WbsConnectStatus","TRollbackErrorCode","TTransaction_setStatus","_timeout_ms","Wbs","constructor","callback_onopen","callback_onmessage","response","callback_onclose","callback_onerror","event_connect","event_error_connect","callback_update_status","callback_updateS_status","status_code","status_text","user","force_set","Set","transaction_dict","w_status","before_map","Map","_generator_uid_c","_dependent_list","_wbs_url","tmp_wbs","WebSocket","onopen","clearInterval","_idInterval_smart_connect","_update_status","_wbs_connect","url","_send_token","onmessage","res_server_json","JSON","parse","t_exec","_GetCurrentTime","t_send","res_uid_c","uid_c","has","delete","get","_check_transaction","onerror","onclose","_is_reconnected","console","warn","code","reason","_smart_connect","mod","body","getUidC","cache_add_key","cache_read_key","stringify","error","timeout_ms","idInterval","setInterval","d","ms","push","rollback","timeout_ms_notify","timeout_ms_response","func","Error","alternative_mod","transaction_func","duplicate_uid","status","create","timeoutID_notify","setTimeout","clearTimeout","timeoutID_response","timeout_notify","timeout_response","rollback_because_error","error_server","after","set","info","id_r","check_token","text","_again_send_dependent","close","msg","_GeneratorUidC","connectNewUrl","disconnect_then_reconnect_new_url","use_wbs","mc","readyState","nowTime","MAX_SAFE_INTEGER","getTime","notify","get_notify","ok","get_response","error_parse_request_clients","includes","rollback_from_server","alert","rollback_from_clients","log","current_date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","ClassHID","args_name","i","names","ids","WbsCloseStatus_","hids","AllJson","DictH_ID_CheckUid_C","viewH_ID","lastH_ID","entries","sort","a","b","disconnect","wbsObj","normal","elm","attributes","strJSON","obj","PyjsLog","TestUseServer","exec","import_from_server","import_sts_exe","n_func","kwargs","help_allowed","info_event","event_create","event_sub","event_unsub","date","now","dispatch","error_code","last_res","beforeCreate","wbsStore","getters","mutations","_updateWbsObj","_updateWbsStatus","_updateWbsStatusCode","_updateResponse","actions","initWebSocket","commit","after_connect","destruction","window","returnValue","_handleResponseFormServer","_onUpdateStatus","namespaced","createStore","modules","app","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}